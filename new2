import java.text.SimpleDateFormat;
import java.util.*;
import java.util.stream.Collectors;

class User {
    // User class definition remains the same as in the previous examples
    // ...

    public User(String name, String mobileNumber, String email, String aadharCard, String dateOfBirth, String password,
                String residentialAddress, String permanentAddress, String occupationalDetails) {
        // Constructor to initialize user details
        // ...
    }
}

public class BankApplication {
    private static List<User> users = new ArrayList<>();
    private static SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    private static SimpleDateFormat timestampFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        while (true) {
            System.out.println("Bank Application");
            System.out.println("1. Register User");
            System.out.println("2. Login");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    registerUser(scanner);
                    break;
                case 2:
                    User loggedInUser = login(scanner);
                    if (loggedInUser != null) {
                        handleLoggedInUser(scanner, loggedInUser);
                    } else {
                        System.out.println("Login failed. Please try again.");
                    }
                    break;
                case 3:
                    System.out.println("Exiting the application. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void registerUser(Scanner scanner) {
        System.out.println("User Registration");
        System.out.print("Enter Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Mobile Number: ");
        String mobileNumber = scanner.next();
        scanner.nextLine(); // Consume the newline character
        System.out.print("Enter Email: ");
        String email = scanner.nextLine();
        System.out.print("Enter Aadhar Card Number: ");
        String aadharCard = scanner.next();
        scanner.nextLine();
        System.out.print("Enter Date of Birth (dd/MM/yyyy): ");
        String dateOfBirth = scanner.next();
        scanner.nextLine();
        System.out.print("Create Password: ");
        String password = scanner.next();
        scanner.nextLine();
        System.out.print("Enter Residential Address: ");
        String residentialAddress = scanner.nextLine();
        System.out.print("Enter Permanent Address: ");
        String permanentAddress = scanner.nextLine();
        System.out.print("Enter Occupational Details: ");
        String occupationalDetails = scanner.nextLine();

        User user = new User(name, mobileNumber, email, aadharCard, dateOfBirth, password, residentialAddress, permanentAddress, occupationalDetails);
        users.add(user);

        System.out.println("User registered successfully!");
    }

    private static User login(Scanner scanner) {
        System.out.println("User Login");
        System.out.print("Enter Mobile Number: ");
        String mobileNumber = scanner.next();
        scanner.nextLine();
        System.out.print("Enter Password: ");
        String password = scanner.next();
        scanner.nextLine();

        for (User user : users) {
            if (user.getMobileNumber().equals(mobileNumber) && user.getPassword().equals(password)) {
                return user;
            }
        }
        return null;
    }

    private static void handleLoggedInUser(Scanner scanner, User user) {
        while (true) {
            System.out.println("Welcome, " + user.getName());
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Account Summary");
            System.out.println("4. Logout");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("Enter the deposit amount: $");
                    double depositAmount = scanner.nextDouble();
                    scanner.nextLine();
                    user.deposit(depositAmount);
                    System.out.println("Deposit successful.");
                    break;
                case 2:
                    System.out.print("Enter the withdrawal amount: $");
                    double withdrawalAmount = scanner.nextDouble();
                    scanner.nextLine();
                    user.withdraw(withdrawalAmount);
                    System.out.println("Withdrawal successful.");
                    break;
                case 3:
                    displayAccountSummary(user);
                    break;
                case 4:
                    System.out.println("Logging out. Goodbye!");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void displayAccountSummary(User user) {
        System.out.println("Account Summary");
        System.out.println("Account Number: " + user.getAccountNumber());
        System.out.println("Balance: $" + user.getBalance());
    }
}
