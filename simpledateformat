import java.util.*;
import java.text.SimpleDateFormat;

class User {
    private String name;
    private String mobileNumber;
    private String aadharCard;
    private String dateOfBirth;
    private String password;
    private String residentialAddress;
    private String permanentAddress;
    private String occupationalDetails;
    private List<Transaction> transactions;

    public User(String name, String mobileNumber, String aadharCard, String dateOfBirth, String password,
                String residentialAddress, String permanentAddress, String occupationalDetails) {
        this.name = name;
        this.mobileNumber = mobileNumber;
        this.aadharCard = aadharCard;
        this.dateOfBirth = dateOfBirth;
        this.password = password;
        this.residentialAddress = residentialAddress;
        this.permanentAddress = permanentAddress;
        this.occupationalDetails = occupationalDetails;
        this.transactions = new ArrayList<>();
    }

    public String getName() {
        return name;
    }

    public String getMobileNumber() {
        return mobileNumber;
    }

    public String getAadharCard() {
        return aadharCard;
    }

    public String getDateOfBirth() {
        return dateOfBirth;
    }

    public String getResidentialAddress() {
        return residentialAddress;
    }

    public String getPermanentAddress() {
        return permanentAddress;
    }

    public String getOccupationalDetails() {
        return occupationalDetails;
    }

    public String getPassword() {
        return password;
    }

    public List<Transaction> getTransactions() {
        return transactions;
    }
}

class Transaction {
    private String date;
    private double amount;

    public Transaction(String date, double amount) {
        this.date = date;
        this.amount = amount;
    }

    public String getDate() {
        return date;
    }

    public double getAmount() {
        return amount;
    }
}

public class BankApplication {
    private static List<User> users = new ArrayList<>();
    private static int accountNumberGenerator = 1001;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        while (true) {
            System.out.println("Bank Application");
            System.out.println("1. Register User");
            System.out.println("2. Account Summary");
            System.out.println("3. Account Statement");
            System.out.println("4. Change Password");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    registerUser(scanner);
                    break;
                case 2:
                    accountSummary(scanner);
                    break;
                case 3:
                    accountStatement(scanner);
                    break;
                case 4:
                    changePassword(scanner);
                    break;
                case 5:
                    System.out.println("Exiting the application. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void registerUser(Scanner scanner) {
        // Implement user registration here
        // You need to collect user details and create a User object, and add it to the 'users' list.
    }

    private static void accountSummary(Scanner scanner) {
        // Implement account summary here
        // Display account number, balance, and recent transactions for the logged-in user.
    }

    private static void accountStatement(Scanner scanner) {
        // Implement account statement here
        // You need to prompt the user for date range and display account statement for the logged-in user.
    }

    private static void changePassword(Scanner scanner) {
        // Implement password change here
        // Allow the user to change their login and transaction passwords.
    }

    // Other utility methods for managing users and transactions can be added here.

    // Please note that this is a simplified example for demonstration purposes.
    // In a real-world application, you would need to implement data persistence and security measures.
}
